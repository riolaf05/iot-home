name: iot-home-ci

on:
  push: # Trigger when push on develop branch
   branches:
      - dev
        
jobs:
  buildx:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
        with:
          ref: dev
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1.0.4
        with:
          version: latest
      
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
        
      - 
        name: Login to GitHub Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      
      #Build&Push - moisture client container
      -
        name: Build and push moisture client container #see: https://github.com/marketplace/actions/docker-buildx
        run: |
          docker buildx build \
            --tag rio05docker/mqtt_subscriber_moisture_sensor:rpi3_test_${GITHUB_SHA} \
            --platform linux/arm/v7 \
            --output "type=image,push=true" \
            --file ./Arduino-Raspberry_MQTT/python/mqtt-subscriber-client/mqtt-subscriber-moisture/Dockerfile \
            ./Arduino-Raspberry_MQTT/python/mqtt-subscriber-client/mqtt-subscriber-moisture
      
      #Build&Push - temperature client container
      -
        name: Build and push temperature client container #see: https://github.com/marketplace/actions/docker-buildx
        run: |
          docker buildx build \
            --tag rio05docker/mqtt_subscriber_temperature_sensor:rpi3_test_${GITHUB_SHA} \
            --platform linux/arm/v7 \
            --output "type=image,push=true" \
            --file ./Arduino-Raspberry_MQTT/python/mqtt-subscriber-client/mqtt-subscriber-temperature/Dockerfile \
            ./Arduino-Raspberry_MQTT/python/mqtt-subscriber-client/mqtt-subscriber-temperature
      
      #Build&Push - raspberry containers
      -
        name: Build and push Raspberry rotating camera container #see: https://github.com/marketplace/actions/docker-buildx
        run: |
          docker buildx build \
            --tag rio05docker/raspberry_container_generic:camera \
            --platform linux/arm/v7 \
            --output "type=image,push=true" \
            --file ./Raspberry-containers/rotating_camera/src/Dockerfile \
            ./Raspberry-containers/rotating_camera/src/
            
            
            
 #get k8s cluster context with:
 #cat $HOME/.kube/config >> kube.config 
 #..change IP addr and expose port 6443
 #kube.config | base64 and copy the result to secrets.KUBE_CONFIG_DATA
  
  #Deploy - moisture client container: #see: https://github.com/marketplace/actions/kubernetes-cli-kubectl
  #  name: Deploy moisture client to cluster
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@master
  #    - name: deploy to cluster
  #      uses: steebchen/kubectl@master
  #      env:
  #        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #      with:
  #        args: set image --record deployment/mqtt-sub-moisture mqtt-sub-moisture=rio05docker/mqtt-sub-moisture:rpi3_test_${{ github.sha }}
  #    
  
  #Deploy - temperature client container
  #    - name: deploy temperature client to cluster
  #      uses: steebchen/kubectl@master
  #      env:
  #        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #      with:
  #        args: set image --record deployment/mqtt-sub-temp mqtt-sub-temp=rio05docker/mqtt-sub-temperature:rpi3_test_${{ github.sha }}
   
   
  #Check - moisture client container
  #    - name: verify moisture client deployment
  #      uses: steebchen/kubectl@master
  #      env:
  #        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #      with:
  #        args: '"rollout status deployment/mqtt-sub-moisture"'
  
  
  #Check - temperature client container
  #    - name: verify temperature client deployment
  #      uses: steebchen/kubectl@master
  #      env:
  #        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #      with:
  #        args: '"rollout status deployment/mqtt-sub-temperature"'
